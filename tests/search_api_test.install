<?php

/**
 * @file
 * Install, update and uninstall functions for the Search API test module.
 */

/**
 * Implements hook_schema().
 */
function search_api_test_schema() {
  $schema['search_api_test'] = array(
    'description' => 'Stores instances of a test entity.',
    'fields' => array(
      'id' => array(
        'description' => 'The primary identifier for an item.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of the item.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => FALSE,
      ),
      'body' => array(
        'description' => 'A text belonging to the item.',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => 'A string identifying the type of item.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => FALSE,
      ),
      'keywords' => array(
        'description' => 'A comma separated list of keywords.',
        'type' => 'varchar',
        'length' => 200,
        'not null' => FALSE,
      ),
      'prices' => array(
        'description' => 'A comma separated list of prices.',
        'type' => 'varchar',
        'length' => 200,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}

/**
 * Implements hook_update_N().
 */
function search_api_test_update_1000() {
  $config = config('search_api_test.settings');
  $config->set('search_api_test_indexing_break', update_variable_get('search_api_test_indexing_break', '8'));
  $config->set('search_api_test_error_state', update_variable_get('search_api_test_error_state', 'FALSE'));
  update_variable_del('search_api_test_indexing_break');
  update_variable_del('search_api_test_error_state');
}

/**
 * Implements hook_install().
 */
function search_api_test_install() {
  // Dynamically generated variable data was detected.
}
